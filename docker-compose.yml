version: '3.8'

services:
  backend:
    build:
      context: ./epic01_catalog_api # Path to the Dockerfile directory
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      # These should match the user/password/db_name in database.py's DATABASE_URL
      # and the POSTGRES_USER/POSTGRES_PASSWORD/POSTGRES_DB for the db service
      DATABASE_URL: postgresql://travel_user:travel_password@db:5432/travel_db
    depends_on:
      db:
        condition: service_healthy # Wait for db to be healthy
    volumes:
      - ./epic01_catalog_api:/app # Mount local code for development (optional, good for dev)

  db:
    image: postgis/postgis:15-3.4 # Or a more recent stable version
    ports:
      - "5432:5432" # Expose PostgreSQL port to host (optional, for direct DB access)
    environment:
      POSTGRES_USER: travel_user
      POSTGRES_PASSWORD: travel_password
      POSTGRES_DB: travel_db
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U travel_user -d travel_db"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: # Define the named volume
